// Care Home Financial Extensions

// Funding Sources
model FundingSource {
  id          String    @id @default(cuid())
  tenantId    String
  name        String
  type        FundingSourceType
  details     Json?     // Specific details based on funding type
  residents   ResidentFunding[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([tenantId, name])
  @@index([tenantId])
}

enum FundingSourceType {
  SELF_FUNDED
  LOCAL_AUTHORITY
  NHS_CHC
  NHS_FNC
  FAIR_DEAL // Ireland
  HSE       // Ireland
  PRIVATE_INSURANCE
  OTHER
}

// Resident Financial Profile
model ResidentFinancial {
  id                String    @id @default(cuid())
  tenantId          String
  residentId        String    @unique
  primaryContact    String?   // Financial responsible party
  billingAddress    Json?     // Billing address if different from resident
  fundingSources    ResidentFunding[]
  roomRate          Decimal   @db.Decimal(10, 2)
  carePackageRate   Decimal   @db.Decimal(10, 2)
  additionalServices Json[]    // Array of additional services and their costs
  paymentMethod     PaymentMethod
  paymentDetails    Json?     // Payment method specific details
  billingDay        Int       // Day of month for billing
  lastBillingDate   DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  @@index([tenantId])
  @@index([residentId])
}

// Resident Funding Sources Junction
model ResidentFunding {
  id              String        @id @default(cuid())
  tenantId        String
  residentId      String
  fundingSource   FundingSource @relation(fields: [fundingSourceId], references: [id])
  fundingSourceId String
  startDate       DateTime
  endDate         DateTime?
  weeklyAmount    Decimal       @db.Decimal(10, 2)
  contribution    Decimal       @db.Decimal(10, 2) // Resident contribution if applicable
  reference       String?       // Reference number from funding body
  details         Json?         // Additional funding details
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  resident        ResidentFinancial @relation(fields: [residentId], references: [residentId])

  @@unique([residentId, fundingSourceId, startDate])
  @@index([tenantId])
  @@index([residentId])
  @@index([fundingSourceId])
}

// Care Package Rates
model CarePackageRate {
  id          String    @id @default(cuid())
  tenantId    String
  name        String
  description String?
  baseRate    Decimal   @db.Decimal(10, 2)
  inclusions  Json[]    // Array of included services
  supplements Json[]    // Array of optional supplements
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([tenantId, name])
  @@index([tenantId])
}

// Room Rates
model RoomRate {
  id          String    @id @default(cuid())
  tenantId    String
  name        String
  description String?
  roomType    String
  baseRate    Decimal   @db.Decimal(10, 2)
  features    Json[]    // Array of room features
  supplements Json[]    // Array of optional supplements
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([tenantId, name])
  @@index([tenantId])
}

// Additional Services
model AdditionalService {
  id          String    @id @default(cuid())
  tenantId    String
  name        String
  description String?
  rate        Decimal   @db.Decimal(10, 2)
  chargeType  ChargeType
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([tenantId, name])
  @@index([tenantId])
}

enum ChargeType {
  ONE_TIME
  DAILY
  WEEKLY
  MONTHLY
  PER_USE
}

enum PaymentMethod {
  DIRECT_DEBIT
  STANDING_ORDER
  BANK_TRANSFER
  CARD_PAYMENT
  CASH
  CHEQUE
  SEPA_DIRECT_DEBIT // Ireland
  OTHER
}

// Billing Schedule
model BillingSchedule {
  id          String    @id @default(cuid())
  tenantId    String
  residentId  String
  scheduleType BillingScheduleType
  frequency   BillingFrequency
  dayOfMonth  Int?
  dayOfWeek   Int?
  lastRun     DateTime?
  nextRun     DateTime
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([tenantId, residentId, scheduleType])
  @@index([tenantId])
  @@index([residentId])
}

enum BillingScheduleType {
  ROOM_RATE
  CARE_PACKAGE
  ADDITIONAL_SERVICES
}

enum BillingFrequency {
  WEEKLY
  MONTHLY
  QUARTERLY
  ANNUALLY
}
